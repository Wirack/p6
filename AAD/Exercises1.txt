Solve slide 15 course 1:
Run the algoritm with "oho ho, ole"
	o = 4
	h = 2
	\s = 2
	, = 1
	l = 1
	e = 1

join(l;e) = (l+e) = 2
join(,;(l+e)) = (,+l+e) = 3
join(\s;h) = (\s + h) = 4
join((,+l+e);(\s+h)) = (,+l+e+\s+h) 7
join(o;(,+l+e+\s+h)) = full trei = 11

1: Solve CLRS 16.3-3. By how much the text with the frequences of characters as given in the exercise would be compressed?
Very nice.

2: Finding shortest paths from a single source vertex and finding a minimum spanning tree are graph optimization problems solvable by greedy algorithms. Consider Prim-Jarnik's, Kruskal's, and Dijkstra's algorithms. For each of these algorithms, describe: 
- what is the greedy choice made in each step of the algorithm? 
- what is the sub-problem that remains after each step of the algorithm? (Remember, the sub-problem should "look" like the original problem, only smaller)

Prims:
	Greedy: Smallest value in frontier without cycle
	sub-problem: Combine the chosen vertices for the problem. Where the start vertex is the combined vertices(This exclude edges not adjacent to combined vertices.)

Kruskals:
	Greedy: Picks smallest edge in the tree without cycle
	sub-problem: all other not choosen edges

Dijkstras:
	Greedy: Pick smallest vertex.
	sub-problem: Combine the chosen vertices, and add the vertecis values to the edges going for the vertices. Where the start vertex is the combined vertices(This exclude edges not adjacent to combined vertices.)


3:Solve CLRS 16.1-4. Argue that your algorithm correctly finds an optimal solution. (Hint: Prove by contradiction. Assume that the algorithm's solution with k lecture halls is not optimal and the k-th lecture hall is not necessary, then, investigate the first activity scheduled in this lecture hall.)

Pick the one with the first start time, then remove all that overlaps the activity. After that pick the avtivity with the first start time, and so on. When there are no elements left, put the activities into a room, and remove the activities, and then run the algoritm again.
